generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MANAGER
  OPERATOR
  MARKETING
}

enum ProductAvailabilityBy {
  DELIVERY
  LOCAL
  BOTH
}

model Company {
  id              Int           @id @default(autoincrement())
  email           String        @unique
  name            String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  legalName       String? // Razão social
  document        String? // CNPJ ou CPF
  phone           String?
  logoUrl         String
  isActive        Boolean       @default(true)
  address         String?
  city            String?
  state           String?
  zipCode         String?
  users           User[]
  openingHours    OpeningHour[]
  isAlwaysOpening Boolean       @default(false)
  temporaryClosed Boolean       @default(false)
  Menu            Menu[]
}

model OpeningHour {
  id        Int     @id @default(autoincrement())
  companyId Int
  dayOfWeek Int // 0 = Domingo, ..., 6 = Sábado
  startTime String? // "HH:mm"
  endTime   String? // "HH:mm"
  closed    Boolean @default(false)
  company   Company @relation(fields: [companyId], references: [id])

  @@index([companyId])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String?
  phone     String?
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      UserRole
  isActive  Boolean  @default(false)
  companyId Int
  company   Company  @relation(fields: [companyId], references: [id])
}

model MenuHours {
  id          Int        @id @default(autoincrement())
  companyId   Int
  dayOfWeek   Int // 0 = Domingo, ..., 6 = Sábado
  startTime   String? // "HH:mm"
  endTime     String? // "HH:mm"
  menuGroup   MenuGroup? @relation(fields: [menuGroupId], references: [id])
  menuGroupId Int?
  alwaysOpen  Boolean    @default(false)
}

model MenuGroup {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  name      String
  menuHours MenuHours[]
  menu      Menu        @relation(fields: [menuId], references: [id])
  menuId    Int
  Product   Product[]
  disabled  Boolean     @default(false)
}

model Menu {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  menuGroup MenuGroup[]
  company   Company     @relation(fields: [companyId], references: [id])
  companyId Int
}

model ProductHours {
  id         Int      @id @default(autoincrement())
  companyId  Int
  dayOfWeek  Int // 0 = Domingo, ..., 6 = Sábado
  startTime  String? // "HH:mm"
  endTime    String? // "HH:mm"
  alwaysOpen Boolean  @default(false)
  Product    Product? @relation(fields: [productId], references: [id])
  productId  Int?
}

model Product {
  id                    Int                   @id @default(autoincrement())
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  code                  String?
  name                  String
  description           String?
  price                 Float
  menuGroup             MenuGroup             @relation(fields: [menuGroupId], references: [id])
  menuGroupId           Int
  isAdultOnly           Boolean               @default(false)
  productHours          ProductHours[]
  image                 String?
  productAvailabilityBy ProductAvailabilityBy
  disabled              Boolean               @default(false)
}
